import os
import subprocess
import time
import requests
import pyautogui
from dotenv import load_dotenv

from alerter import send_admin_alert

'''
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è VPN-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ ProtonVPN.
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–∞–Ω–¥—ã CLI –¥–ª—è –∑–∞–ø—É—Å–∫–∞/–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ pyautogui –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å GUI.
–í–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É IP –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
'''

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
load_dotenv()
PROTON_VPN_PATH = r"C:\Program Files\Proton\VPN\ProtonVPN.Launcher.exe"
CONNECT_BUTTON_IMG = 'connect_button.png'
DISCONNECT_BUTTON_IMG = 'disconnect_button.png'
HOME_IP = os.getenv("HOME_IP_ADDRESS")
IP_CHECK_SERVICES = [
    "https://api.ipify.org",
    "https://ipinfo.io/ip",
    "https://icanhazip.com"
]


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def get_current_ip() -> str | None:
    """–ü—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π IP, –ø–µ—Ä–µ–±–∏—Ä–∞—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–æ–≤."""
    for service in IP_CHECK_SERVICES:
        try:
            response = requests.get(service, timeout=10)
            response.raise_for_status()
            return response.text.strip()
        except requests.RequestException:
            continue  # –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Å–µ—Ä–≤–∏—Å
    return None


# --- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def connect_vpn() -> bool:
    print("  -> –ó–∞–ø—É—Å–∫ vpn_manager.py (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)...")

    # 1. –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print("     –®–∞–≥ 1/5: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ProtonVPN...")
    try:
        subprocess.Popen([PROTON_VPN_PATH])
    except FileNotFoundError:
        print(f"     [ERROR] –ù–µ –Ω–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª ProtonVPN –ø–æ –ø—É—Ç–∏: {PROTON_VPN_PATH}")
        return False

    # 2. "–£–º–Ω–æ–µ" –æ–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"
    print("     –®–∞–≥ 2/5: –ê–∫—Ç–∏–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å' (–¥–æ 5 –º–∏–Ω—É—Ç)...")
    start_time = time.time()
    button_found = False
    while time.time() - start_time < 300:  # 300 —Å–µ–∫—É–Ω–¥ = 5 –º–∏–Ω—É—Ç
        try:
            connect_button_location = pyautogui.locateCenterOnScreen(CONNECT_BUTTON_IMG, confidence=0.8)
            if connect_button_location:
                print("     >>> –ö–Ω–æ–ø–∫–∞ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å' –Ω–∞–π–¥–µ–Ω–∞!")
                button_found = True
                break
        except pyautogui.ImageNotFoundException:
            print("     ...–∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∂–¥—É 15 —Å–µ–∫—É–Ω–¥...")
            time.sleep(15)
            continue

    if not button_found:
        print("     [ERROR] –ö–Ω–æ–ø–∫–∞ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∑–∞ 5 –º–∏–Ω—É—Ç.")
        send_admin_alert("üî• *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ–π VPN:*\n–ö–Ω–æ–ø–∫–∞ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∑–∞ 5 –º–∏–Ω—É—Ç.")
        return False

    # 3. –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
    print("     –®–∞–≥ 3/5: –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å'...")
    try:
        pyautogui.click(connect_button_location)
        print("     –ö–Ω–æ–ø–∫–∞ '–ü–æ–¥–∫–ª—é—á–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞.")
    except Exception as e:
        print(f"     [ERROR] –û—à–∏–±–∫–∞ pyautogui –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏: {e}")
        return False

    # 4. –ü–∞—É–∑–∞ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    print("     –®–∞–≥ 4/5: –û–∂–∏–¥–∞–Ω–∏–µ 3 –º–∏–Ω—É—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    time.sleep(180)

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ IP
    print("     –®–∞–≥ 5/5: –ü—Ä–æ–≤–µ—Ä–∫–∞ IP-–∞–¥—Ä–µ—Å–∞...")
    current_ip = get_current_ip()
    if not current_ip:
        message = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å IP. –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã."
        print(f"     [ERROR] {message}")
        send_admin_alert(f"üî• *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ–π VPN:*\n{message}")
        return False

    if current_ip == HOME_IP:
        message = f"VPN –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è. –¢–µ–∫—É—â–∏–π IP ({current_ip}) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –¥–æ–º–∞—à–Ω–∏–º."
        print(f"     [ERROR] {message}")
        send_admin_alert(f"üî• *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ–π VPN:*\n{message}")
        return False

    print(f"     [SUCCESS] VPN —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω. –ù–æ–≤—ã–π IP: {current_ip}")
    return True


def disconnect_vpn():
    print("  -> –ó–∞–ø—É—Å–∫ vpn_manager.py (–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ)...")

    # --- –ü–æ–ø—ã—Ç–∫–∞ ‚Ññ1: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ GUI (pyautogui) ---
    print("     –®–∞–≥ 1/4: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ GUI...")
    try:
        disconnect_button_location = pyautogui.locateCenterOnScreen(DISCONNECT_BUTTON_IMG, confidence=0.8)
        if disconnect_button_location:
            pyautogui.click(disconnect_button_location)
            print("     –ö–Ω–æ–ø–∫–∞ '–û—Ç–∫–ª—é—á–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞. –û–∂–∏–¥–∞–Ω–∏–µ 1 –º–∏–Ω—É—Ç–∞...")
            time.sleep(60)
        else:
            print("     [INFO] –ö–Ω–æ–ø–∫–∞ '–û—Ç–∫–ª—é—á–∏—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ VPN —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω.")
    except Exception as e:
        print(f"     [WARNING] –û—à–∏–±–∫–∞ pyautogui –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–Ω–æ–ø–∫–∏ '–û—Ç–∫–ª—é—á–∏—Ç—å': {e}")

    # --- –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ IP –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ ---
    print("     –®–∞–≥ 2/4: –ü—Ä–æ–≤–µ—Ä–∫–∞ IP-–∞–¥—Ä–µ—Å–∞...")
    current_ip = get_current_ip()
    if current_ip == HOME_IP:
        print(f"     [SUCCESS] VPN —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω (–º–µ—Ç–æ–¥ GUI). –¢–µ–∫—É—â–∏–π IP: {current_ip}")
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä–æ–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã
        subprocess.run(["taskkill", "/F", "/IM", "ProtonVPN.exe"], check=False, capture_output=True)
        return

    # --- –ü–æ–ø—ã—Ç–∫–∞ ‚Ññ2: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ CLI (–µ—Å–ª–∏ GUI –Ω–µ –ø–æ–º–æ–≥) ---
    print(f"     [INFO] IP ({current_ip}) –≤—Å–µ –µ—â–µ –Ω–µ –¥–æ–º–∞—à–Ω–∏–π. –ü—Ä–æ–±—É—é –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ CLI...")
    try:
        print("     –®–∞–≥ 3/4: –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ...")
        subprocess.run([PROTON_VPN_PATH, "--disconnect"], check=True, timeout=60)
        subprocess.run(["taskkill", "/F", "/IM", "ProtonVPN.exe"], check=False, capture_output=True)

        print("     –®–∞–≥ 4/4: –û–∂–∏–¥–∞–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥ –∏ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ IP...")
        time.sleep(30)

        final_ip = get_current_ip()
        if final_ip == HOME_IP:
            print(f"     [SUCCESS] VPN —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω (–º–µ—Ç–æ–¥ CLI). –¢–µ–∫—É—â–∏–π IP: {final_ip}")
        else:
            print(f"     [WARNING] VPN –æ—Ç–∫–ª—é—á–µ–Ω, –Ω–æ IP ({final_ip}) –≤—Å–µ –µ—â–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –¥–æ–º–∞—à–Ω–∏–º.")

    except Exception as e:
        print(f"     [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ VPN —á–µ—Ä–µ–∑ CLI: {e}")


if __name__ == '__main__':
    # --- –¢–µ—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ –¢–û–õ–¨–ö–û –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è ---
    print("--- –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –¢–û–õ–¨–ö–û —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è VPN ---")
    if not HOME_IP:
        print("!!! –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è —Ç–µ—Å—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å HOME_IP_ADDRESS –≤ –≤–∞—à .env —Ñ–∞–π–ª !!!")
    else:
        disconnect_vpn()